> source("common.R",print.eval=TRUE)
# R version 3.3.3 (2017-03-06) # ramah # TRUE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- s$def(x=numeric()) %~% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] -0.5309233  1.9064429
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean      median         uq
 doit0(rnorm(10))     40.480     56.083    104.1091    103.5825    120.561
 doit1(rnorm(10)) 363191.633 464619.628 609293.3501 591593.1245 632403.969
 doit2(rnorm(10)) 234956.220 328899.359 353900.6545 370742.3375 405405.176
 doit3(rnorm(10))   2049.645   2410.302   5085.6958   2980.6820   3221.078
        max neval
    207.588    10
 943691.091    10
 418436.631    10
  18994.898    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr     min       lq      mean    median        uq       max
 doit0(rnorm(10))  16.878  21.3205   33.9438   31.2575   37.9195   140.992
 doit3(rnorm(10)) 897.432 957.2395 1419.9965 1014.2710 1596.1180 53090.791
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq     mean   median       uq      max neval
 doit0(rnorm(10)) 200.3821 200.4092 200.5458 200.4866 200.7238 200.7274     5
 doit1(rnorm(10)) 340.3121 350.7888 390.2552 376.9002 436.3036 446.9715     5
 doit2(rnorm(10)) 287.7356 309.0409 340.8421 325.8530 364.3284 417.2525     5
 doit3(rnorm(10)) 201.9262 202.7330 205.3138 203.1212 203.3416 215.4469     5
> 
> 
