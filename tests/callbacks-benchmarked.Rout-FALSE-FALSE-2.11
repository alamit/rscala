> source("common.R",print.eval=TRUE)
# R version 3.3.3 (2017-03-06) # ramah # FALSE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- s$def(x=numeric()) %~% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] -0.5309233  1.9064429
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean      median         uq
 doit0(rnorm(10))     22.671     51.812     86.4759     98.2185    108.661
 doit1(rnorm(10)) 455387.751 550354.113 779745.9318 710649.2135 949642.935
 doit2(rnorm(10)) 298684.202 371140.735 420326.8828 403656.7460 455251.155
 doit3(rnorm(10))   1968.746   2069.605   2738.6483   2502.8140   3447.653
         max neval
     146.961    10
 1570676.668    10
  619373.956    10
    4156.489    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr     min      lq      mean  median        uq       max neval
 doit0(rnorm(10))  16.976  21.731  32.63818  30.093   37.9345    98.381  1000
 doit3(rnorm(10)) 590.657 777.624 975.92615 832.469 1070.8020 15828.094  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq     mean   median       uq      max neval
 doit0(rnorm(10)) 200.3657 200.3736 200.4267 200.3768 200.3848 200.6324     5
 doit1(rnorm(10)) 479.9744 482.2716 507.3674 495.6147 522.1161 556.8604     5
 doit2(rnorm(10)) 331.7652 376.7015 395.7668 405.3802 427.2280 437.7594     5
 doit3(rnorm(10)) 201.7137 201.8783 202.1332 202.0436 202.3998 202.6307     5
> 
> 
