> source("common.R",print.eval=TRUE)
# R version 3.3.3 (2017-03-06) # ramah # FALSE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- s$def(x=numeric()) %~% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] -0.5309233  1.9064429
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean     median         uq
 doit0(rnorm(10))     42.240     46.893     93.1415    100.995    107.652
 doit1(rnorm(10)) 310260.252 537555.643 813126.9916 824292.975 960252.507
 doit2(rnorm(10)) 256055.933 444729.918 464822.5938 491364.713 517052.236
 doit3(rnorm(10))   1305.426   1531.531   3314.6954   2704.488   3024.223
         max neval
     153.441    10
 1456047.411    10
  637090.661    10
   12025.870    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr     min       lq       mean   median       uq       max neval
 doit0(rnorm(10))  16.976  21.8960   34.90519  29.5015   40.345   767.991  1000
 doit3(rnorm(10)) 587.778 774.6955 1028.98495 864.4485 1021.283 12035.954  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq     mean   median       uq      max neval
 doit0(rnorm(10)) 200.3454 200.3790 200.3849 200.3797 200.3961 200.4242     5
 doit1(rnorm(10)) 430.5027 458.9626 489.8283 482.5530 523.1126 554.0105     5
 doit2(rnorm(10)) 329.4505 355.7145 399.4241 407.9330 442.7445 461.2778     5
 doit3(rnorm(10)) 201.8408 201.9187 202.1099 202.0764 202.1662 202.5474     5
> 
> 
