> source("common.R",print.eval=TRUE)
# R version 3.3.3 (2017-03-06) # ramah # FALSE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- s$def(x=numeric()) %~% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] -0.5309233  1.9064429
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean      median          uq
 doit0(rnorm(10))     40.360     58.069    101.6982    101.1745     108.106
 doit1(rnorm(10)) 589381.421 632755.532 996507.0659 897019.0320 1420868.592
 doit2(rnorm(10)) 392529.650 430115.469 525805.7447 466150.0140  605532.742
 doit3(rnorm(10))   1989.327   2170.664   4253.4588   2528.6935    3232.788
         max neval
     210.012    10
 1662691.318    10
  882167.847    10
   15872.706    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr     min       lq      mean   median       uq       max neval
 doit0(rnorm(10))  22.313   40.140   57.3554   49.126   76.111   120.802  1000
 doit3(rnorm(10)) 921.981 1623.405 2114.4397 1789.761 1937.684 31879.277  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq     mean   median        uq       max neval
 doit0(rnorm(10)) 200.3724 200.3766 200.3879 200.3824  200.3953  200.4127     5
 doit1(rnorm(10)) 854.5283 891.5190 971.5616 984.9158 1054.9997 1071.8451     5
 doit2(rnorm(10)) 458.8575 575.0047 572.2847 592.1600  610.6727  624.7288     5
 doit3(rnorm(10)) 201.8728 202.1281 202.5932 202.2127  202.4528  204.2996     5
> 
> 
