> source("common.R",print.eval=TRUE)
# R version 3.3.3 (2017-03-06) # ramah # FALSE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- s$def(x=numeric()) %~% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] -0.5309233  1.9064429
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq       mean     median         uq
 doit0(rnorm(10))     43.506     54.949     99.297    107.579    119.309
 doit1(rnorm(10)) 198793.464 512402.760 597811.959 628333.804 682234.444
 doit2(rnorm(10)) 222246.716 286408.927 358503.775 358755.163 399638.879
 doit3(rnorm(10))   1811.762   2085.454   3575.069   2265.830   2584.788
         max neval
     162.674    10
 1011888.648    10
  486850.353    10
   14240.701    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr     min       lq      mean  median       uq       max neval
 doit0(rnorm(10))  16.946  22.0565  33.70698  30.460   37.698   799.712  1000
 doit3(rnorm(10)) 590.089 748.2325 978.61190 808.634 1092.167 15889.745  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq     mean   median       uq      max neval
 doit0(rnorm(10)) 200.3854 200.3898 200.4370 200.3908 200.3939 200.6251     5
 doit1(rnorm(10)) 315.1226 404.8825 452.8946 420.8131 503.3506 620.3043     5
 doit2(rnorm(10)) 263.1759 271.7429 273.7222 276.4433 276.7633 280.4857     5
 doit3(rnorm(10)) 201.8565 201.9918 202.6293 202.4086 203.1333 203.7562     5
> 
> 
