> source("common.R",print.eval=TRUE)
# R version 3.4.0 (2017-04-21) # ramah # FALSE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- s$def(x=numeric()) %~% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] -0.3438236  2.0255381
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean      median         uq
 doit0(rnorm(10))     84.351     97.944    420.7255    109.3525    131.265
 doit1(rnorm(10)) 339470.513 535849.809 578364.9512 569265.4125 673121.902
 doit2(rnorm(10)) 216283.805 332986.971 406853.0044 401288.3500 427816.605
 doit3(rnorm(10))   1767.122   2076.474   6357.8560   2528.3450  12881.428
        max neval
   3225.336    10
 722524.852    10
 626530.189    10
  16212.959    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr     min       lq       mean   median        uq       max
 doit0(rnorm(10))  17.322  22.8280   38.98936  34.8865   47.1535   777.629
 doit3(rnorm(10)) 571.497 742.3185 1281.86732 897.4860 1395.6100 21279.541
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq     mean   median       uq      max neval
 doit0(rnorm(10)) 200.3613 200.4602 200.4679 200.4616 200.4706 200.5856     5
 doit1(rnorm(10)) 389.3615 396.9849 465.9872 412.9671 452.8601 677.7623     5
 doit2(rnorm(10)) 294.7275 345.7014 339.7142 346.4319 351.3557 360.3546     5
 doit3(rnorm(10)) 201.2876 202.0148 202.4308 202.6737 202.9178 203.2599     5
> 
> 
