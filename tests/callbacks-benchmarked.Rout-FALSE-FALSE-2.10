> source("common.R",print.eval=TRUE)
# R version 3.3.3 (2017-03-06) # ramah # FALSE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- s$def(x=numeric()) %~% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] -0.5309233  1.9064429
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean      median         uq
 doit0(rnorm(10))     29.915     49.992     99.0175    111.9925    128.422
 doit1(rnorm(10)) 358787.814 491188.071 580034.7425 578758.2060 690952.230
 doit2(rnorm(10)) 222969.498 290637.737 330049.7091 338876.1945 363034.611
 doit3(rnorm(10))   1974.283   2128.975   5014.3458   2580.8100   8578.231
        max neval
    172.439    10
 781489.726    10
 411858.494    10
  13471.657    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr     min      lq       mean   median       uq       max neval
 doit0(rnorm(10))  17.058  30.839   42.65742   38.249   51.679   122.388  1000
 doit3(rnorm(10)) 653.571 833.460 1364.85368 1162.522 1544.733 13738.961  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq     mean   median       uq      max neval
 doit0(rnorm(10)) 200.3648 200.4102 200.5177 200.5360 200.6066 200.6708     5
 doit1(rnorm(10)) 369.8886 371.8755 385.1020 381.0586 397.9639 404.7237     5
 doit2(rnorm(10)) 272.5166 277.9021 327.4589 277.9377 307.7279 501.2099     5
 doit3(rnorm(10)) 201.2756 201.7305 202.4271 202.3380 203.2217 203.5697     5
> 
> 
