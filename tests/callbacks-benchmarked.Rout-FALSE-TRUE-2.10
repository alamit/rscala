> source("common.R",print.eval=TRUE)
# R version 3.3.3 (2017-03-06) # ramah # FALSE # TRUE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- s$def(x=numeric()) %~% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] -0.5309233  1.9064429
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean     median         uq
 doit0(rnorm(10))     39.383     47.327     96.4875    109.475    121.820
 doit1(rnorm(10)) 376150.704 544696.867 612792.5490 588617.133 675872.554
 doit2(rnorm(10)) 234677.316 347484.291 366290.1966 374034.465 414673.114
 doit3(rnorm(10))   1585.430   2171.114   2806.6352   2410.486   3132.339
        max neval
    148.707    10
 984611.694    10
 462876.227    10
   5937.607    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr     min       lq     mean   median       uq       max neval
 doit0(rnorm(10))  16.891  20.2090  28.5216  27.7485  32.3290   105.496  1000
 doit3(rnorm(10)) 609.377 760.7055 949.5870 790.3140 846.0865 16443.271  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq     mean   median       uq      max neval
 doit0(rnorm(10)) 200.4208 200.4554 200.6080 200.5999 200.6383 200.9256     5
 doit1(rnorm(10)) 318.2628 351.1913 378.4618 378.5738 404.5028 439.7784     5
 doit2(rnorm(10)) 273.8833 300.9684 330.0066 316.0694 345.9400 413.1721     5
 doit3(rnorm(10)) 201.4317 201.8197 202.3468 201.8763 202.5000 204.1062     5
> 
> 
