> source("common.R",print.eval=TRUE)
# R version 3.3.3 (2017-03-06) # ramah # TRUE # TRUE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- s$def(x=numeric()) %~% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] -0.5309233  1.9064429
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq         mean       median          uq
 doit0(rnorm(10))     40.985     58.070     102.8197     108.8875     116.435
 doit1(rnorm(10)) 652207.874 718525.761 1079533.5585 1100582.3875 1396578.979
 doit2(rnorm(10)) 391594.244 521736.631  636865.2454  618121.3390  770755.641
 doit3(rnorm(10))   2933.663   3458.103    7000.1143    3579.7005    6792.079
         max neval
     197.466    10
 1606349.827    10
  908622.113    10
   22577.620    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min        lq       mean   median       uq       max
 doit0(rnorm(10))   21.807   42.1065   64.63282   54.337   87.014  1246.599
 doit3(rnorm(10)) 1151.613 2182.4310 2928.14063 2438.586 2780.581 43421.597
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq     mean   median       uq      max neval
 doit0(rnorm(10)) 200.3688 200.3695 200.3898 200.3824 200.4038 200.4244     5
 doit1(rnorm(10)) 444.4631 454.2662 540.7887 529.1337 618.8997 657.1805     5
 doit2(rnorm(10)) 384.6144 385.1402 423.7144 441.7082 445.4911 461.6178     5
 doit3(rnorm(10)) 202.0947 202.2530 203.2257 203.5308 203.7030 204.5468     5
> 
> 
