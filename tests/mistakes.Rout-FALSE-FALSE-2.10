> source("common.R",print.eval=TRUE)
# R Under development (unstable) (2017-04-25 r72623) # ramah # FALSE # FALSE
> 
> if ( substr(Sys.getenv("RSCALA_SCALA_VERSION"),1,4) != "2.10" ) {
+   a <- s %.~% "null"
+   print(a)
+ }
> 
> a <- s %~% "null"
> a
NULL
> 
> a <- list(a=3,b=4)
> tryCatch(s$j <- a,error=function(e) e)
<simpleError in doTryCatch(return(expr), name, parentenv, handler): Data structure is not supported.>
> s$jj <- unlist(a)
> s$jj
[1] 3 4
> 
> tryCatch(s$j <- complex(3,4,5,32),error=function(e) e)
<simpleError in checkType(value): Unsupported data type.>
> 
> tryCatch(s %~% "
+   val a = 3
+   val b = 5
+   a ++ b
+ ",error=function(e) e)
<simpleError in scalaEval(interpreter, snippet, workspace): Error in evaluation.>
> 
> s %~% "
+   val a = 3
+   val b = 5
+   (a,b)
+ "
ScalaInterpreterReference... res3: (Int, Int)
> 
> s %.~% "
+   val a = 3
+   val b = 5
+   (a,b)
+ "
ScalaInterpreterReference... res4: (Int, Int)
> 
> tryCatch(s$xaa,error = function(e) e)
<simpleError in doTryCatch(return(expr), name, parentenv, handler): Undefined identifier: xaa>
> s$xaa <- NULL
> s$xaa
NULL
> 
> s$xaa <- I(3)
> s$xaa
[1] 3
> s$.val("xaa")
ScalaInterpreterReference... xaa: Double
Warning message:
In s$.val("xaa") :
  Syntax "s$.val()" is deprecated and will be removed.  Use the 'scalaGet' function instead.
> 
> withNA <- c(1,2,3,NA,4)
> s$withNA <- withNA
> 
> withNaN <- c(1,2,3,NaN,4)
> s$withNaN <- withNaN
> 
> identical(  withNA,  withNaN)
[1] FALSE
> identical(s$withNA,s$withNaN)
[1] TRUE
> 
> withMax <- c(1,.Machine$double.xmax,.Machine$double.xmin)
> s$withMax <- withMax
> identical(withMax,s$withMax)
[1] TRUE
> 
> withMax <- c(1L,.Machine$integer.max)
> s$withMax <- withMax
> identical(withMax,s$withMax)
[1] TRUE
> 
> 
