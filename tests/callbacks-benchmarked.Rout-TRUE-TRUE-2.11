> source("common.R",print.eval=TRUE)
# R version 3.4.0 (2017-04-21) # ramah # TRUE # TRUE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- s$def(x=numeric()) %~% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] -0.3438236  2.0255381
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean      median         uq
 doit0(rnorm(10))     79.889     94.619    394.1632    107.9995    117.065
 doit1(rnorm(10)) 468815.240 696290.847 878665.4420 801679.1265 995956.077
 doit2(rnorm(10)) 408199.199 462192.717 712211.8146 607580.6700 655273.611
 doit3(rnorm(10))   2478.337   3914.313   7915.1548   6282.1505  13713.998
         max neval
    3011.349    10
 1383760.705    10
 1919688.964    10
   14770.047    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr     min        lq       mean    median       uq       max
 doit0(rnorm(10))  22.257   42.9385   64.97928   54.8225   86.608  1701.084
 doit3(rnorm(10)) 986.788 2117.9975 2657.47829 2283.0310 2483.482 34729.686
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq     mean   median       uq      max neval
 doit0(rnorm(10)) 200.3814 200.3871 200.4929 200.4013 200.4036 200.8913     5
 doit1(rnorm(10)) 439.7712 447.9631 525.2296 489.1471 499.1050 750.1615     5
 doit2(rnorm(10)) 333.7856 343.8828 377.7256 375.6161 384.5909 450.7527     5
 doit3(rnorm(10)) 201.8308 202.6590 202.7478 202.9053 203.1002 203.2438     5
> 
> 
