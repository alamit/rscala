> source("common.R",print.eval=TRUE)
# R version 3.3.3 (2017-03-06) # ramah # TRUE # TRUE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- s$def(x=numeric()) %~% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] -0.5309233  1.9064429
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq         mean     median          uq
 doit0(rnorm(10))     33.167     69.677      93.2579     99.935     117.969
 doit1(rnorm(10)) 600648.633 671876.634 1023387.1167 897456.725 1349581.501
 doit2(rnorm(10)) 430002.654 483183.146  575199.4670 557984.228  630776.730
 doit3(rnorm(10))   2483.835   2836.561    9306.3753   3714.205   16341.682
         max neval
     132.331    10
 1809848.809    10
  886154.395    10
   28342.175    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr     min        lq      mean    median        uq       max
 doit0(rnorm(10))   19.78   39.4285   56.2198   49.6385   77.9235   201.532
 doit3(rnorm(10)) 1089.96 1519.4675 2594.4418 2246.0260 2582.2665 41117.222
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq     mean   median       uq      max neval
 doit0(rnorm(10)) 200.3192 200.3665 200.4006 200.3728 200.4417 200.5026     5
 doit1(rnorm(10)) 486.1287 571.6601 691.4451 771.0977 784.2771 844.0620     5
 doit2(rnorm(10)) 361.7387 372.4448 396.3196 374.8209 420.9779 451.6159     5
 doit3(rnorm(10)) 201.9644 202.9969 203.0570 203.0466 203.1678 204.1096     5
> 
> 
