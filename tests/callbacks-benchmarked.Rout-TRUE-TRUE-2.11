> source("common.R",print.eval=TRUE)
# R version 3.4.0 (2017-04-21) # ramah # TRUE # TRUE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- s$def(x=numeric()) %~% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] -0.3438236  2.0255381
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean      median          uq
 doit0(rnorm(10))     92.320     98.903    397.6238    111.7535     118.656
 doit1(rnorm(10)) 615134.559 630436.728 817703.3137 778514.2250 1030069.665
 doit2(rnorm(10)) 434886.824 476803.976 676058.6041 560336.0705  691487.385
 doit3(rnorm(10))   2099.939   2617.813   6571.8636   5868.6335    7326.548
         max neval
    3003.529    10
 1115375.058    10
 1318443.152    10
   15044.354    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr     min        lq       mean    median       uq       max
 doit0(rnorm(10))  19.962   39.1155   57.70466   48.1595   78.456  1795.342
 doit3(rnorm(10)) 933.354 1316.5270 2445.79387 2138.2565 2464.567 27178.249
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq     mean   median       uq      max neval
 doit0(rnorm(10)) 200.3333 200.3607 200.4451 200.4060 200.4443 200.6811     5
 doit1(rnorm(10)) 428.8146 429.9601 470.5576 453.1830 500.1100 540.7204     5
 doit2(rnorm(10)) 336.6766 364.4926 396.0471 365.1087 373.2387 540.7187     5
 doit3(rnorm(10)) 201.5305 202.0635 202.4282 202.4299 202.9751 203.1421     5
> 
> 
