> source("common.R",print.eval=TRUE)
# R version 3.4.0 (2017-04-21) # ramah # FALSE # TRUE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- s$def(x=numeric()) %~% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] -0.3438236  2.0255381
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean     median         uq
 doit0(rnorm(10))     78.132    100.384    289.3494    116.969    121.453
 doit1(rnorm(10)) 436177.052 721020.315 766306.6254 762342.662 852576.815
 doit2(rnorm(10)) 366390.864 471109.509 613439.9678 508991.129 542579.268
 doit3(rnorm(10))   2413.359   2785.504   3795.2176   3281.378   4241.179
         max neval
    1910.498    10
  988152.788    10
 1312312.013    10
    8114.229    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr     min       lq       mean    median        uq       max
 doit0(rnorm(10))  18.651  35.1505   47.62711   42.5005   57.2265  1088.177
 doit3(rnorm(10)) 637.331 910.0975 1330.31591 1170.2380 1391.1205 25616.924
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq     mean   median       uq      max neval
 doit0(rnorm(10)) 200.3062 200.3591 200.4232 200.3659 200.4123 200.6725     5
 doit1(rnorm(10)) 453.7346 486.2398 507.3218 503.4936 529.8243 563.3168     5
 doit2(rnorm(10)) 358.3919 367.9209 436.6968 386.1651 465.4604 605.5455     5
 doit3(rnorm(10)) 201.3304 201.5346 202.0705 202.0689 202.2596 203.1591     5
> 
> 
