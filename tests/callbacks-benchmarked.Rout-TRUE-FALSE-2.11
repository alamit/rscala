> source("common.R",print.eval=TRUE)
# R version 3.4.0 (2017-04-21) # ramah # TRUE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- s$def(x=numeric()) %~% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] -0.3438236  2.0255381
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean     median         uq
 doit0(rnorm(10))     78.762     92.341    347.1915    114.805    120.751
 doit1(rnorm(10)) 485340.219 652464.210 800100.8053 791539.853 926125.608
 doit2(rnorm(10)) 384230.731 451094.833 654396.8236 519492.313 600200.157
 doit3(rnorm(10))   2645.207   2780.506   6640.4419   2950.686   3744.166
         max neval
    2506.198    10
 1227512.329    10
 1607850.778    10
   38257.002    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr     min       lq       mean   median        uq       max
 doit0(rnorm(10))  18.376   32.034   49.99022   43.270   59.2375  2104.809
 doit3(rnorm(10)) 786.615 1091.069 1842.35354 1529.903 2090.8860 26086.634
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq     mean   median       uq      max neval
 doit0(rnorm(10)) 200.3052 200.3526 200.4060 200.3927 200.4118 200.5680     5
 doit1(rnorm(10)) 453.3857 508.0569 514.8826 515.6310 543.6990 553.6405     5
 doit2(rnorm(10)) 376.8294 382.1267 440.2620 388.2622 447.9050 606.1865     5
 doit3(rnorm(10)) 201.6666 201.9968 202.4458 202.1925 202.3450 204.0283     5
> 
> 
