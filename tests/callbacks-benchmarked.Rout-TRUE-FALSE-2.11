> source("common.R",print.eval=TRUE)
# R version 3.4.0 (2017-04-21) # ramah # TRUE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- s$def(x=numeric()) %~% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] -0.3438236  2.0255381
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean      median         uq
 doit0(rnorm(10))     75.366     93.194    414.8185    111.2165    120.923
 doit1(rnorm(10)) 456624.277 739408.472 828146.0897 824783.6750 996910.744
 doit2(rnorm(10)) 349577.965 457303.251 608347.5804 527987.3725 650694.492
 doit3(rnorm(10))   2272.747   2667.926  10875.7736   3223.6465  17012.553
         max neval
    3207.342    10
 1192801.586    10
 1121140.681    10
   38538.038    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr     min       lq       mean    median        uq       max
 doit0(rnorm(10))  17.819  27.2855   44.47644   38.0705   50.4275  1825.617
 doit3(rnorm(10)) 714.431 955.6890 1620.96643 1167.9330 1707.1220 20434.498
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq     mean   median       uq      max neval
 doit0(rnorm(10)) 200.3639 200.4319 200.5453 200.4973 200.5939 200.8395     5
 doit1(rnorm(10)) 415.5607 502.8418 524.1456 532.4965 569.2931 600.5360     5
 doit2(rnorm(10)) 349.2817 354.9587 376.9646 360.9300 401.1760 418.4766     5
 doit3(rnorm(10)) 202.5654 202.6396 202.8989 202.6796 202.8647 203.7451     5
> 
> 
