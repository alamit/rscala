> source("common.R",print.eval=TRUE)
# R version 3.3.3 (2017-03-06) # ramah # TRUE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- s$def(x=numeric()) %~% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] -0.5309233  1.9064429
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean     median          uq
 doit0(rnorm(10))     43.563     84.585     97.7058    105.668     116.436
 doit1(rnorm(10)) 629329.366 717548.016 984424.9595 898621.189 1193102.158
 doit2(rnorm(10)) 335880.039 479982.942 554103.8927 501167.274  578563.768
 doit3(rnorm(10))   3136.900   3203.747   4138.9718   3588.677    4843.005
         max neval
     133.236    10
 1668342.497    10
 1003476.383    10
    7403.653    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr     min        lq       mean    median       uq      max
 doit0(rnorm(10))  17.348   24.0715   41.35344   36.5875   48.288  1198.65
 doit3(rnorm(10)) 828.095 1107.3010 1676.39108 1260.2825 1857.627 23249.07
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq     mean   median       uq      max neval
 doit0(rnorm(10)) 200.3166 200.3665 200.3742 200.3866 200.3898 200.4115     5
 doit1(rnorm(10)) 455.3491 465.3195 481.6128 489.6567 493.2698 504.4689     5
 doit2(rnorm(10)) 354.0745 400.4561 400.7462 405.5262 417.6182 426.0560     5
 doit3(rnorm(10)) 201.7989 202.2205 202.3273 202.2585 202.3768 202.9818     5
> 
> 
