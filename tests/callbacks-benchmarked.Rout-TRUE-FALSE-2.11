> source("common.R",print.eval=TRUE)
# R version 3.3.3 (2017-03-06) # ramah # TRUE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- s$def(x=numeric()) %~% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] -0.5309233  1.9064429
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq         mean     median          uq
 doit0(rnorm(10))     34.996     47.839      95.9583    105.667     113.532
 doit1(rnorm(10)) 502339.727 765021.053 1018728.2403 829829.088 1183932.119
 doit2(rnorm(10)) 346006.592 427900.510  493626.1158 504451.953  545081.937
 doit3(rnorm(10))   2201.602   2794.390    4603.4970   2977.852    3693.946
         max neval
     156.261    10
 2130015.526    10
  656493.439    10
   16905.750    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr     min        lq       mean   median       uq       max
 doit0(rnorm(10))  19.795   36.6035   50.62301   44.816   68.963   166.408
 doit3(rnorm(10)) 929.664 1281.6175 2140.78579 1952.258 2357.695 26664.796
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq     mean   median       uq      max neval
 doit0(rnorm(10)) 200.3447 200.3636 200.4077 200.4154 200.4408 200.4739     5
 doit1(rnorm(10)) 525.7124 536.3434 565.3319 536.6398 595.5045 632.4593     5
 doit2(rnorm(10)) 339.0564 367.9293 394.8388 392.6858 423.0433 451.4790     5
 doit3(rnorm(10)) 202.0708 202.1680 202.6450 202.8351 203.0287 203.1220     5
> 
> 
