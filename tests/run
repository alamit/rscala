#!/bin/bash

if [[ "$1" == "--install" ]]
then
  DOINSTALL=TRUE
  shift
fi

if [[ $# -eq 0 ]]
then
  DOALL=TRUE
  SCRIPTS="basics.R callbacks.R callbacks-benchmarked.R defs.R functions.R identifiers.R interpolate.R io.R lengthOneAsVector.R memory.R mistakes.R protocol-speed.scala recursion.R rinscala.scala unit-testing.R"
else
  DOALL=FALSE
  SCRIPTS="$*"
fi

export VERSIONS="2.10.6 2.11.8 2.12.0-M5"
export SERIALIZES="TRUE FALSE"
export OUTPUTS="TRUE FALSE"

#export VERSIONS="2.11.8"
#export SERIALIZES="FALSE"
#export OUTPUTS="TRUE"

if [[ "$DOINSTALL" == TRUE ]]
then
  echo "Testing installation."
  ./scala-info >| scala-info.out 2>&1
fi

for SCALA_VERSION in $VERSIONS
do
  echo "Running battery for $SCALA_VERSION"
  killall java > /dev/null 2>&1
  export SCALA_HOME=~/local/scala/scala-$SCALA_VERSION
  export SCALA_VERSION
  for script in $SCRIPTS
  do
    echo "  Running $script"
    for SERIALIZE in $SERIALIZES
    do
      for OUTPUT in $OUTPUTS
      do
        EXT=$([[ "$script" = *.* ]] && echo ".${script##*.}" || echo '')
        if [[ "$EXT" == .R ]]
        then
          RSCALA_SCALA_VERSION=$SCALA_VERSION RSCALA_OUTPUT=$OUTPUT RSCALA_SERIALIZE=$SERIALIZE R CMD BATCH --no-restore --no-save $script ${script}out-$SERIALIZE-$OUTPUT-$SCALA_VERSION
        elif [[ "$EXT" == .scala || "$EXT" == "" ]]
        then
          RSCALA_SCALA_VERSION=$SCALA_VERSION RSCALA_OUTPUT=$OUTPUT RSCALA_SERIALIZE=$SERIALIZE ./$script >| $script.out-$SERIALIZE-$OUTPUT-$SCALA_VERSION 2>&1
        fi
      done
    done
  done
done

