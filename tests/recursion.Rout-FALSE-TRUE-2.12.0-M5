
R Under development (unstable) (2016-07-05 r70861) -- "Unsuffered Consequences"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(rscala)
> 
> serialize <- as.logical(Sys.getenv("RSCALA_SERIALIZE"))
> output <- as.logical(Sys.getenv("RSCALA_OUTPUT"))
> version <- Sys.getenv("RSCALA_SCALA_VERSION")
> s <- scala(serialize=serialize,stdout=output,stderr=output)
> if ( version != s %~% "scala.util.Properties.versionNumberString" ) stop("Version mismatch.")
> 
> 
> # This is not recursion via callbacks.
> f <- function(counter) {
+   if ( counter >= 10 ) return(counter)
+   cat("Hello",counter,"from R.\n")
+   f(s %~% '
+     println("Hello @{counter+1} from Scala.")
+     R.evalI0("@{counter+1}")
+   ')
+ }
> f(0)
Hello 0 from R.
Hello 1 from Scala.
Hello 1 from R.
Hello 2 from Scala.
Hello 2 from R.
Hello 3 from Scala.
Hello 3 from R.
Hello 4 from Scala.
Hello 4 from R.
Hello 5 from Scala.
Hello 5 from R.
Hello 6 from Scala.
Hello 6 from R.
Hello 7 from Scala.
Hello 7 from R.
Hello 8 from Scala.
Hello 8 from R.
Hello 9 from Scala.
Hello 9 from R.
Hello 10 from Scala.
[1] 10
> 
> 
> # This is recursion via callbacks.
> g <- function(counter) {
+   if ( counter >= 10 ) return(counter)
+   cat("Hello",counter,"from R.\n")
+   s %@% '
+     println("Hello @{counter} from Scala.")
+     R.eval("g(@{counter+1})")
+   '
+ }
> g(0)
Hello 0 from R.
Hello 0 from Scala.
Hello 1 from R.
Hello 1 from Scala.
Hello 2 from R.
Hello 2 from Scala.
Hello 3 from R.
Hello 3 from Scala.
Hello 4 from R.
Hello 4 from Scala.
Hello 5 from R.
Hello 5 from Scala.
Hello 6 from R.
Hello 6 from Scala.
Hello 7 from R.
Hello 7 from Scala.
Hello 8 from R.
Hello 8 from Scala.
Hello 9 from R.
Hello 9 from Scala.
> 
> 
> # This is recursion via callbacks using predefined functions
> hh <- s$def('x: Int','
+   println(s"Hello $x from Scala.")
+   R.eval(s"h(${x+1})")
+ ')
> 
> h <- function(counter) {
+   if ( counter >= 10 ) return()
+   cat("Hello",counter,"from R.\n")
+   hh(counter)
+ }
> h(0)
Hello 0 from R.
java.lang.IllegalAccessException: Class org.ddahl.rscala.ScalaServer can not access a member of class $line35.$read$$iw$$iw$$$Lambda$1139/1942163841 with modifiers "public"
	at sun.reflect.Reflection.ensureMemberAccess(Reflection.java:102)
	at java.lang.reflect.AccessibleObject.slowCheckMemberAccess(AccessibleObject.java:296)
	at java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:288)
	at java.lang.reflect.Method.invoke(Method.java:491)
	at org.ddahl.rscala.ScalaServer.callFunction(ScalaServer.scala:76)
	at org.ddahl.rscala.ScalaServer.doInvoke(ScalaServer.scala:195)
	at org.ddahl.rscala.ScalaServer.heart(ScalaServer.scala:571)
	at org.ddahl.rscala.ScalaServer.run(ScalaServer.scala:598)
	at org.ddahl.rscala.Main$.delayedEndpoint$org$ddahl$rscala$Main$1(Main.scala:5)
	at org.ddahl.rscala.Main$delayedInit$body.apply(Main.scala:3)
	at scala.Function0.apply$mcV$sp$(Function0.scala:34)
	at scala.Function0.apply$mcV$sp(Function0.scala:34)
	at scala.App.$anonfun$main$1$adapted(App.scala:76)
	at scala.collection.immutable.List.foreach(List.scala:376)
	at scala.App.main$(App.scala:76)
	at scala.App.main(App.scala:74)
	at org.ddahl.rscala.Main.main(Main.scala)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at scala.reflect.internal.util.ScalaClassLoader.$anonfun$run$2(ScalaClassLoader.scala:98)
	at scala.reflect.internal.util.ScalaClassLoader.asContext$(ScalaClassLoader.scala:32)
	at scala.reflect.internal.util.ScalaClassLoader.asContext(ScalaClassLoader.scala:30)
	at scala.reflect.internal.util.ScalaClassLoader.run$(ScalaClassLoader.scala:98)
	at scala.reflect.internal.util.ScalaClassLoader.run(ScalaClassLoader.scala:90)
	at scala.tools.nsc.CommonRunner.run$(ObjectRunner.scala:22)
	at scala.tools.nsc.CommonRunner.run(ObjectRunner.scala:21)
	at scala.tools.nsc.CommonRunner.runAndCatch$(ObjectRunner.scala:29)
	at scala.tools.nsc.CommonRunner.runAndCatch(ObjectRunner.scala:28)
	at scala.tools.nsc.MainGenericRunner.runTarget$1(MainGenericRunner.scala:65)
	at scala.tools.nsc.MainGenericRunner.run$1(MainGenericRunner.scala:87)
	at scala.tools.nsc.MainGenericRunner.process(MainGenericRunner.scala:98)
	at scala.tools.nsc.MainGenericRunner$.main(MainGenericRunner.scala:103)
	at scala.tools.nsc.MainGenericRunner.main(MainGenericRunner.scala)
java.lang.IllegalAccessException: Class org.ddahl.rscala.ScalaServer can not access a member of class $line35.$read$$iw$$iw$$$Lambda$1139/1942163841 with modifiers "public"
Error in hh(counter) : Invocation error.
Calls: h -> hh
Execution halted
